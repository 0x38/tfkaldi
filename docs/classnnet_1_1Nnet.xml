<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classnnet_1_1Nnet" kind="class" prot="public">
    <compoundname>nnet::Nnet</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classnnet_1_1Nnet_1a05789c0fcd99fe155eb3361831ea09cb" prot="public" static="no" mutable="no">
        <type></type>
        <definition>nnet.Nnet::conf</definition>
        <argsstring></argsstring>
        <name>conf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/spraak/vrenkens/code/tfkaldi/neuralNetworks/nnet.py" line="24" column="1" bodyfile="/users/spraak/vrenkens/code/tfkaldi/neuralNetworks/nnet.py" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnnet_1_1Nnet_1a0764a018d562efc2c8e6428a77c32666" prot="public" static="no" mutable="no">
        <type></type>
        <definition>nnet.Nnet::DNN</definition>
        <argsstring></argsstring>
        <name>DNN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/spraak/vrenkens/code/tfkaldi/neuralNetworks/nnet.py" line="37" column="1" bodyfile="/users/spraak/vrenkens/code/tfkaldi/neuralNetworks/nnet.py" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnnet_1_1Nnet_1a2630dcdbe09529aaa07c16c0312093eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def nnet.Nnet.__init__</definition>
        <argsstring></argsstring>
        <name>__init__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/spraak/vrenkens/code/tfkaldi/neuralNetworks/nnet.py" line="21" column="1" bodyfile="/users/spraak/vrenkens/code/tfkaldi/neuralNetworks/nnet.py" bodystart="21" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classnnet_1_1Nnet_1a1386533d7e4738e5e0264ceab2987c81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def nnet.Nnet.train</definition>
        <argsstring></argsstring>
        <name>train</name>
        <briefdescription>
<para>Train the neural network. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>featdir</parametername>
</parameternamelist>
<parameterdescription>
<para>directory where the training features are located (in feats.scp) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alifile</parametername>
</parameternamelist>
<parameterdescription>
<para>the file containing the state alignments </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/spraak/vrenkens/code/tfkaldi/neuralNetworks/nnet.py" line="43" column="1" bodyfile="/users/spraak/vrenkens/code/tfkaldi/neuralNetworks/nnet.py" bodystart="43" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classnnet_1_1Nnet_1aed36f213fbbd76d0cf1488af4631aa1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def nnet.Nnet.decode</definition>
        <argsstring></argsstring>
        <name>decode</name>
        <briefdescription>
<para>compute pseudo likelihoods the testing set </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>featdir</parametername>
</parameternamelist>
<parameterdescription>
<para>directory where the features are located (in feats.scp) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>decodir</parametername>
</parameternamelist>
<parameterdescription>
<para>location where output will be stored (in feats.scp), cannot be the same as featdir </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/spraak/vrenkens/code/tfkaldi/neuralNetworks/nnet.py" line="177" column="1" bodyfile="/users/spraak/vrenkens/code/tfkaldi/neuralNetworks/nnet.py" bodystart="177" bodyend="217"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>a class for a neural network that can be used together with Kaldi </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/users/spraak/vrenkens/code/tfkaldi/neuralNetworks/nnet.py" line="15" column="1" bodyfile="/users/spraak/vrenkens/code/tfkaldi/neuralNetworks/nnet.py" bodystart="15" bodyend="217"/>
    <listofallmembers>
      <member refid="classnnet_1_1Nnet_1a2630dcdbe09529aaa07c16c0312093eb" prot="public" virt="non-virtual"><scope>nnet::Nnet</scope><name>__init__</name></member>
      <member refid="classnnet_1_1Nnet_1a05789c0fcd99fe155eb3361831ea09cb" prot="public" virt="non-virtual"><scope>nnet::Nnet</scope><name>conf</name></member>
      <member refid="classnnet_1_1Nnet_1aed36f213fbbd76d0cf1488af4631aa1d" prot="public" virt="non-virtual"><scope>nnet::Nnet</scope><name>decode</name></member>
      <member refid="classnnet_1_1Nnet_1a0764a018d562efc2c8e6428a77c32666" prot="public" virt="non-virtual"><scope>nnet::Nnet</scope><name>DNN</name></member>
      <member refid="classnnet_1_1Nnet_1a1386533d7e4738e5e0264ceab2987c81" prot="public" virt="non-virtual"><scope>nnet::Nnet</scope><name>train</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
