<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="nnetlayer_8py" kind="file">
    <compoundname>nnetlayer.py</compoundname>
    <innerclass refid="classnnetlayer_1_1FFLayer" prot="public">nnetlayer::FFLayer</innerclass>
    <innernamespace refid="namespacennetlayer">nnetlayer</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>tensorflow<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>tf</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>abc<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ABCMeta,<sp/>abstractmethod</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">##This<sp/>class<sp/>defines<sp/>a<sp/>fully<sp/>connected<sp/>feed<sp/>forward<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="classnnetlayer_1_1FFLayer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnnetlayer_1_1FFLayer" kindref="compound">FFLayer</ref>(object):</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##FFLayer<sp/>constructor,<sp/>defines<sp/>the<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#@param<sp/>input_dim<sp/>input<sp/>dimension<sp/>of<sp/>the<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#@param<sp/>output_dim<sp/>output<sp/>dimension<sp/>of<sp/>the<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#@param<sp/>weights_std<sp/>standart<sp/>deviation<sp/>of<sp/>the<sp/>weights<sp/>initializer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#@param<sp/>name<sp/>name<sp/>of<sp/>the<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#@param<sp/>transfername<sp/>name<sp/>of<sp/>the<sp/>transfer<sp/>function<sp/>that<sp/>is<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#@param<sp/>l2_norm<sp/>boolean<sp/>that<sp/>determines<sp/>of<sp/>l2_normalisation<sp/>is<sp/>used<sp/>after<sp/>every<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#@param<sp/>dropout<sp/>the<sp/>chance<sp/>that<sp/>a<sp/>hidden<sp/>unit<sp/>is<sp/>propagated<sp/>to<sp/>the<sp/>next<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classnnetlayer_1_1FFLayer_1a6194f76734fbb8b9432bebba41aa3b71" kindref="member">__init__</ref>(self,<sp/>input_dim,<sp/>output_dim,<sp/>weights_std,<sp/>name,<sp/>transfername=&apos;linear&apos;,<sp/>l2_norm=False,<sp/>dropout=1):</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#create<sp/>the<sp/>model<sp/>parameters<sp/>in<sp/>this<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>tf.variable_scope(name<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;_parameters&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classnnetlayer_1_1FFLayer_1a1373b1cf6fc058820dbb36cc5703c38f" kindref="member">weights</ref><sp/>=<sp/>tf.get_variable(</highlight><highlight class="stringliteral">&apos;weights&apos;</highlight><highlight class="normal">,<sp/>[input_dim,<sp/>output_dim],<sp/>initializer=tf.random_normal_initializer(stddev=weights_std))</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classnnetlayer_1_1FFLayer_1aace95cffd62a426fcf995e3db10d9a77" kindref="member">biases</ref><sp/>=<sp/>tf.get_variable(</highlight><highlight class="stringliteral">&apos;biases&apos;</highlight><highlight class="normal">,<sp/><sp/>[output_dim],<sp/>initializer=tf.constant_initializer(0))</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#save<sp/>the<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classnnetlayer_1_1FFLayer_1ad93fca9ebad50094f7b89d904c736a93" kindref="member">transfername</ref><sp/>=<sp/>transfername</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classnnetlayer_1_1FFLayer_1a5850e25e3655c3f6aa9b79cac3e7de36" kindref="member">l2_norm</ref><sp/>=<sp/>l2_norm</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classnnetlayer_1_1FFLayer_1a7a2b1ddab0e0e9da987e1f8062244626" kindref="member">dropout</ref><sp/>=<sp/>dropout</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classnnetlayer_1_1FFLayer_1a41838499cf2120b3a194491460643a99" kindref="member">name</ref><sp/>=<sp/>name</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##Do<sp/>the<sp/>forward<sp/>computation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#@param<sp/>inputs<sp/>the<sp/>input<sp/>to<sp/>the<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#@param<sp/>apply_dropout<sp/>bool<sp/>to<sp/>determine<sp/>if<sp/>dropout<sp/>is<sp/>aplied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#@return<sp/>the<sp/>output<sp/>of<sp/>the<sp/>layer<sp/>without<sp/>and<sp/>with<sp/>dropout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classnnetlayer_1_1FFLayer_1a4d9be9f6b25f86c700f7d4289f4b2d99" kindref="member">__call__</ref>(self,<sp/>inputs,<sp/>apply_dropout<sp/>=<sp/>True):</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>tf.name_scope(self.<ref refid="classnnetlayer_1_1FFLayer_1a41838499cf2120b3a194491460643a99" kindref="member">name</ref>):</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#apply<sp/>weights<sp/>and<sp/>biases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputs<sp/>=<sp/>transferFunction(tf.matmul(inputs,<sp/>self.<ref refid="classnnetlayer_1_1FFLayer_1a1373b1cf6fc058820dbb36cc5703c38f" kindref="member">weights</ref>)<sp/>+<sp/>self.<ref refid="classnnetlayer_1_1FFLayer_1aace95cffd62a426fcf995e3db10d9a77" kindref="member">biases</ref>,<sp/>self.<ref refid="classnnetlayer_1_1FFLayer_1ad93fca9ebad50094f7b89d904c736a93" kindref="member">transfername</ref>)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#apply<sp/>l2<sp/>normalisation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classnnetlayer_1_1FFLayer_1a5850e25e3655c3f6aa9b79cac3e7de36" kindref="member">l2_norm</ref>:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputs<sp/>=<sp/>transferFunction(outputs,<sp/></highlight><highlight class="stringliteral">&apos;l2_norm&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#apply<sp/>dropout<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classnnetlayer_1_1FFLayer_1a7a2b1ddab0e0e9da987e1f8062244626" kindref="member">dropout</ref>&lt;1<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>apply_dropout:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputs<sp/>=<sp/>tf.nn.dropout(outputs,<sp/>self.<ref refid="classnnetlayer_1_1FFLayer_1a7a2b1ddab0e0e9da987e1f8062244626" kindref="member">dropout</ref>)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outputs</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">##Apply<sp/>the<sp/>transfer<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">#@param<sp/>inputs<sp/>the<sp/>inputs<sp/>to<sp/>the<sp/>transfer<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">#@param<sp/>name<sp/>the<sp/>name<sp/>of<sp/>the<sp/>function,<sp/>current<sp/>options<sp/>are:<sp/>relu,<sp/>sigmoid,<sp/>tanh,<sp/>linear<sp/>or<sp/>l2_norm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">#@return<sp/>the<sp/>output<sp/>to<sp/>the<sp/>transfer<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">transferFunction(inputs,<sp/>name):</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>name<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;relu&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tf.nn.relu(inputs)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>name==<sp/></highlight><highlight class="stringliteral">&apos;sigmoid&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tf.nn.sigmoid(inputs)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>name<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;tanh&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tf.nn.tanh(inputs)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>name<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;linear&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inputs</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>name<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;l2_norm&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tf.nn.l2_normalize(inputs,1)*np.sqrt(inputs.get_shape().as_list()[1])</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&apos;unknown<sp/>transfer<sp/>function:<sp/>%s&apos;</highlight><highlight class="normal"><sp/>%<sp/>name)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
    </programlisting>
    <location file="/users/spraak/vrenkens/code/tfkaldi/neuralNetworks/nnetlayer.py"/>
  </compounddef>
</doxygen>
