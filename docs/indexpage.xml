<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="indexpage" kind="page">
    <compoundname>index</compoundname>
    <title>TFKaldi</title>
    <detaileddescription>
<para><ulink url="https://travis-ci.org/kaldi-asr/kaldi">![Build Status](https://travis-ci.org/kaldi-asr/kaldi.svg?branch=master)</ulink></para><para><heading level="1">Kaldi with TensorFlow Neural Net </heading>
</para><para><heading level="2">Installation </heading>
</para><para><itemizedlist>
<listitem><para>Download and install <ulink url="https://www.tensorflow.org/versions/0.6.0/get_started/os_setup.html#download-and-setup">TensorFlow</ulink>.</para></listitem><listitem><para>Download and install <ulink url="https://github.com/kaldi-asr/kaldi">Kaldi</ulink></para></listitem><listitem><para>Modify the config/config_*.cfg for your setup, specifically the directories</para></listitem></itemizedlist>
</para><para><heading level="2">Code overview </heading>
</para><para>main.py: Goes through the neural net training procedure, look at the config files in the config directory to modify the settings<itemizedlist>
<listitem><para>Compute the features of training and testing set for GMM and DNN</para></listitem><listitem><para>Train the monophone GMM with kaldi and get alignments</para></listitem><listitem><para>Train the triphone GMM with kaldi and get alignments</para></listitem><listitem><para>train the LDA+MLLT GMM with kaldi and get alignments</para></listitem><listitem><para>Train the neural net with TensorFlow with the alignments as targets</para></listitem><listitem><para>Get the state pseudo-likelihoods of the testing set using the neural net</para></listitem><listitem><para>Decode the testing set with Kaldi using the state pseudo-likelihoods and report the results</para></listitem></itemizedlist>
</para><para>features/feat.py: Does feature computation currently supports:<itemizedlist>
<listitem><para>mfcc</para></listitem><listitem><para>fbank</para></listitem><listitem><para>ssc</para></listitem></itemizedlist>
</para><para>features/prepare_data.py: data prep functionality<itemizedlist>
<listitem><para>compute the features for all the utterances</para></listitem><listitem><para>compute mean and variance statistics for normalisation</para></listitem><listitem><para>shuffle the examples for mini-batch training</para></listitem></itemizedlist>
</para><para>io/ark.py: read and write ark format<itemizedlist>
<listitem><para>defines a reader class for ark format</para></listitem><listitem><para>defines a writer class for ark format</para></listitem></itemizedlist>
</para><para>io/batdispenser.py: reading and formatting features<itemizedlist>
<listitem><para>defines a class that can read features and do some processing like splicing and cmvn</para></listitem><listitem><para>defines a class that can create batches of data</para></listitem></itemizedlist>
</para><para>neural networks/nnet.py: neural network class for a kaldi-style neural network<itemizedlist>
<listitem><para>train: train the neural net</para></listitem><listitem><para>decode: compute pseudo-likelihood</para></listitem></itemizedlist>
</para><para>neural networks/nnetgraph.py: creating tensorflow graph structures<itemizedlist>
<listitem><para>defines a abstract class for a neural network graph</para></listitem><listitem><para>defines a class for a deep neural network, inherits from the neural network graph class</para></listitem><listitem><para>defines a class for the training environment for a neural network</para></listitem><listitem><para>defines a class for the decoding environment of a neural network</para></listitem></itemizedlist>
</para><para>neural networks/nnetlayer.py: layers for a neural network<itemizedlist>
<listitem><para>defines a feed forward fully connected layer</para></listitem></itemizedlist>
</para><para>If you have a question or remark about the code or if you would like to contribute please mail me at <ulink url="mailto:vincent.renkens@esat.kuleuven.be">vincent.renkens@esat.kuleuven.be</ulink> </para>    </detaileddescription>
  </compounddef>
</doxygen>
