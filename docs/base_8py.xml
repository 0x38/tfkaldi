<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="base_8py" kind="file">
    <compoundname>base.py</compoundname>
    <innernamespace refid="namespacebase">base</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#The<sp/>MIT<sp/>License<sp/>(MIT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#Copyright<sp/>(c)<sp/>2013<sp/>James<sp/>Lyons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">#<sp/>calculate<sp/>filterbank<sp/>features.<sp/>Provides<sp/>e.g.<sp/>fbank<sp/>and<sp/>mfcc<sp/>features<sp/>for<sp/>use<sp/>in<sp/>ASR<sp/>applications</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Author:<sp/>James<sp/>Lyons<sp/>2012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sigproc</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.fftpack<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>dct</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">#<sp/>make<sp/>it<sp/>python3.x<sp/>compatible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>xrange(1)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>xrange=range</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">##Compute<sp/>MFCC<sp/>features<sp/>from<sp/>an<sp/>audio<sp/>signal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">#@param<sp/>signal<sp/>the<sp/>audio<sp/>signal<sp/>from<sp/>which<sp/>to<sp/>compute<sp/>features.<sp/>Should<sp/>be<sp/>an<sp/>N*1<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">#@param<sp/>samplerate<sp/>the<sp/>samplerate<sp/>of<sp/>the<sp/>signal<sp/>we<sp/>are<sp/>working<sp/>with.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">#@param<sp/>conf<sp/>feature<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">#@return<sp/>A<sp/>numpy<sp/>array<sp/>of<sp/>size<sp/>(NUMFRAMES<sp/>by<sp/>numcep)<sp/>containing<sp/>features.<sp/>Each<sp/>row<sp/>holds<sp/>1<sp/>feature<sp/>vector,<sp/>a<sp/>numpy<sp/>vector<sp/>containing<sp/>the<sp/>signal<sp/>log-energy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">mfcc(signal,samplerate,conf):</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>feat,energy<sp/>=<sp/>fbank(signal,samplerate,conf)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>feat<sp/>=<sp/>numpy.log(feat)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>feat<sp/>=<sp/>dct(feat,<sp/>type=2,<sp/>axis=1,<sp/>norm=</highlight><highlight class="stringliteral">&apos;ortho&apos;</highlight><highlight class="normal">)[:,:int(conf[</highlight><highlight class="stringliteral">&apos;numcep&apos;</highlight><highlight class="normal">])]</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>feat<sp/>=<sp/>lifter(feat,float(conf[</highlight><highlight class="stringliteral">&apos;ceplifter&apos;</highlight><highlight class="normal">]))</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>feat,<sp/>numpy.log(energy)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">##Compute<sp/>fbank<sp/>features<sp/>from<sp/>an<sp/>audio<sp/>signal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">#@param<sp/>signal<sp/>the<sp/>audio<sp/>signal<sp/>from<sp/>which<sp/>to<sp/>compute<sp/>features.<sp/>Should<sp/>be<sp/>an<sp/>N*1<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">#@param<sp/>samplerate<sp/>the<sp/>samplerate<sp/>of<sp/>the<sp/>signal<sp/>we<sp/>are<sp/>working<sp/>with.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">#@param<sp/>conf<sp/>feature<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">#@return<sp/>A<sp/>numpy<sp/>array<sp/>of<sp/>size<sp/>(NUMFRAMES<sp/>by<sp/>nfilt)<sp/>containing<sp/>features,<sp/>a<sp/>numpy<sp/>vector<sp/>containing<sp/>the<sp/>signal<sp/>energy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">fbank(signal,samplerate,conf):</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>highfreq=<sp/>int(conf[</highlight><highlight class="stringliteral">&apos;highfreq&apos;</highlight><highlight class="normal">])<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>highfreq<sp/>&lt;<sp/>0:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>highfreq<sp/>=<sp/>samplerate/2</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>signal<sp/>=<sp/><ref refid="namespacesigproc_1a92d9db78bb710a1ac69efff4efc450ae" kindref="member">sigproc.preemphasis</ref>(signal,float(conf[</highlight><highlight class="stringliteral">&apos;preemph&apos;</highlight><highlight class="normal">]))</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>frames<sp/>=<sp/><ref refid="namespacesigproc_1a88d8f5067e2c9ff2ab473c2101dc911c" kindref="member">sigproc.framesig</ref>(signal,<sp/>float(conf[</highlight><highlight class="stringliteral">&apos;winlen&apos;</highlight><highlight class="normal">])*samplerate,<sp/>float(conf[</highlight><highlight class="stringliteral">&apos;winstep&apos;</highlight><highlight class="normal">])*samplerate)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>pspec<sp/>=<sp/><ref refid="namespacesigproc_1a56b7774ca1b868a497e9d1b3a65b9b1e" kindref="member">sigproc.powspec</ref>(frames,int(conf[</highlight><highlight class="stringliteral">&apos;nfft&apos;</highlight><highlight class="normal">]))</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>energy<sp/>=<sp/>numpy.sum(pspec,1)<sp/></highlight><highlight class="comment">#<sp/>this<sp/>stores<sp/>the<sp/>total<sp/>energy<sp/>in<sp/>each<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>energy<sp/>=<sp/>numpy.where(energy<sp/>==<sp/>0,numpy.finfo(float).eps,energy)<sp/></highlight><highlight class="comment">#<sp/>if<sp/>energy<sp/>is<sp/>zero,<sp/>we<sp/>get<sp/>problems<sp/>with<sp/>log</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>fb<sp/>=<sp/>get_filterbanks(int(conf[</highlight><highlight class="stringliteral">&apos;nfilt&apos;</highlight><highlight class="normal">]),int(conf[</highlight><highlight class="stringliteral">&apos;nfft&apos;</highlight><highlight class="normal">]),samplerate,int(conf[</highlight><highlight class="stringliteral">&apos;lowfreq&apos;</highlight><highlight class="normal">]),highfreq)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>feat<sp/>=<sp/>numpy.dot(pspec,fb.T)<sp/></highlight><highlight class="comment">#<sp/>compute<sp/>the<sp/>filterbank<sp/>energies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>feat<sp/>=<sp/>numpy.where(feat<sp/>==<sp/>0,numpy.finfo(float).eps,feat)<sp/></highlight><highlight class="comment">#<sp/>if<sp/>feat<sp/>is<sp/>zero,<sp/>we<sp/>get<sp/>problems<sp/>with<sp/>log</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>feat,energy</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">##Compute<sp/>log-fbank<sp/>features<sp/>from<sp/>an<sp/>audio<sp/>signal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">#@param<sp/>signal<sp/>the<sp/>audio<sp/>signal<sp/>from<sp/>which<sp/>to<sp/>compute<sp/>features.<sp/>Should<sp/>be<sp/>an<sp/>N*1<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">#@param<sp/>samplerate<sp/>the<sp/>samplerate<sp/>of<sp/>the<sp/>signal<sp/>we<sp/>are<sp/>working<sp/>with.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">#@param<sp/>conf<sp/>feature<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">#@return<sp/>A<sp/>numpy<sp/>array<sp/>of<sp/>size<sp/>(NUMFRAMES<sp/>by<sp/>nfilt)<sp/>containing<sp/>features,<sp/>a<sp/>numpy<sp/>vector<sp/>containing<sp/>the<sp/>signal<sp/>log-energy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">logfbank(signal,samplerate,conf):<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>feat,energy<sp/>=<sp/>fbank(signal,samplerate,conf)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numpy.log(feat),<sp/>numpy.log(energy)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">##Compute<sp/>ssc<sp/>features<sp/>from<sp/>an<sp/>audio<sp/>signal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">#@param<sp/>signal<sp/>the<sp/>audio<sp/>signal<sp/>from<sp/>which<sp/>to<sp/>compute<sp/>features.<sp/>Should<sp/>be<sp/>an<sp/>N*1<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">#@param<sp/>samplerate<sp/>the<sp/>samplerate<sp/>of<sp/>the<sp/>signal<sp/>we<sp/>are<sp/>working<sp/>with.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">#@param<sp/>conf<sp/>feature<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">#@return<sp/>A<sp/>numpy<sp/>array<sp/>of<sp/>size<sp/>(NUMFRAMES<sp/>by<sp/>nfilt)<sp/>containing<sp/>features,<sp/>a<sp/>numpy<sp/>vector<sp/>containing<sp/>the<sp/>signal<sp/>log-energy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">ssc(signal,samplerate,conf):</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>highfreq=<sp/>int(conf[</highlight><highlight class="stringliteral">&apos;highfreq&apos;</highlight><highlight class="normal">])<sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>highfreq<sp/>&lt;<sp/>0:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>highfreq<sp/>=<sp/>samplerate/2</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>signal<sp/>=<sp/><ref refid="namespacesigproc_1a92d9db78bb710a1ac69efff4efc450ae" kindref="member">sigproc.preemphasis</ref>(signal,float(conf[</highlight><highlight class="stringliteral">&apos;preemph&apos;</highlight><highlight class="normal">]))</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>frames<sp/>=<sp/><ref refid="namespacesigproc_1a88d8f5067e2c9ff2ab473c2101dc911c" kindref="member">sigproc.framesig</ref>(signal,<sp/>float(conf[</highlight><highlight class="stringliteral">&apos;winlen&apos;</highlight><highlight class="normal">])*samplerate,<sp/>float(conf[</highlight><highlight class="stringliteral">&apos;winstep&apos;</highlight><highlight class="normal">])*samplerate)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>pspec<sp/>=<sp/><ref refid="namespacesigproc_1a56b7774ca1b868a497e9d1b3a65b9b1e" kindref="member">sigproc.powspec</ref>(frames,int(conf[</highlight><highlight class="stringliteral">&apos;nfft&apos;</highlight><highlight class="normal">]))</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>energy<sp/>=<sp/>numpy.sum(pspec,1)<sp/></highlight><highlight class="comment">#<sp/>this<sp/>stores<sp/>the<sp/>total<sp/>energy<sp/>in<sp/>each<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>energy<sp/>=<sp/>numpy.where(energy<sp/>==<sp/>0,numpy.finfo(float).eps,energy)<sp/></highlight><highlight class="comment">#<sp/>if<sp/>energy<sp/>is<sp/>zero,<sp/>we<sp/>get<sp/>problems<sp/>with<sp/>log</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>fb<sp/>=<sp/>get_filterbanks(int(conf[</highlight><highlight class="stringliteral">&apos;nfilt&apos;</highlight><highlight class="normal">]),int(conf[</highlight><highlight class="stringliteral">&apos;nfft&apos;</highlight><highlight class="normal">]),samplerate,int(conf[</highlight><highlight class="stringliteral">&apos;lowfreq&apos;</highlight><highlight class="normal">]),highfreq)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>feat<sp/>=<sp/>numpy.dot(pspec,fb.T)<sp/></highlight><highlight class="comment">#<sp/>compute<sp/>the<sp/>filterbank<sp/>energies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>R<sp/>=<sp/>numpy.tile(numpy.linspace(1,samplerate/2,numpy.size(pspec,1)),(numpy.size(pspec,0),1))</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numpy.dot(pspec*R,fb.T)<sp/>/<sp/>feat,<sp/>numpy.log(energy)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">##Convert<sp/>a<sp/>value<sp/>in<sp/>Hertz<sp/>to<sp/>Mels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">#@param<sp/>hz<sp/>a<sp/>value<sp/>in<sp/>Hz.<sp/>This<sp/>can<sp/>also<sp/>be<sp/>a<sp/>numpy<sp/>array,<sp/>conversion<sp/>proceeds<sp/>element-wise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">#@return<sp/>a<sp/>value<sp/>in<sp/>Mels.<sp/>If<sp/>an<sp/>array<sp/>was<sp/>passed<sp/>in,<sp/>an<sp/>identical<sp/>sized<sp/>array<sp/>is<sp/>returned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">hz2mel(hz):</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2595<sp/>*<sp/>numpy.log10(1+hz/700.0)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">##Convert<sp/>a<sp/>value<sp/>in<sp/>Mels<sp/>to<sp/>Hertz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">#@param<sp/>mel<sp/>a<sp/>value<sp/>in<sp/>Mels.<sp/>This<sp/>can<sp/>also<sp/>be<sp/>a<sp/>numpy<sp/>array,<sp/>conversion<sp/>proceeds<sp/>element-wise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">#@return<sp/>a<sp/>value<sp/>in<sp/>Hertz.<sp/>If<sp/>an<sp/>array<sp/>was<sp/>passed<sp/>in,<sp/>an<sp/>identical<sp/>sized<sp/>array<sp/>is<sp/>returned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">mel2hz(mel):</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>700*(10**(mel/2595.0)-1)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">##Compute<sp/>a<sp/>Mel-filterbank.<sp/>The<sp/>filters<sp/>are<sp/>stored<sp/>in<sp/>the<sp/>rows,<sp/>the<sp/>columns<sp/>correspond<sp/>to<sp/>fft<sp/>bins.<sp/>The<sp/>filters<sp/>are<sp/>returned<sp/>as<sp/>an<sp/>array<sp/>of<sp/>size<sp/>nfilt<sp/>*<sp/>(nfft/2<sp/>+<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">#@param<sp/>nfilt<sp/>the<sp/>number<sp/>of<sp/>filters<sp/>in<sp/>the<sp/>filterbank,<sp/>default<sp/>20.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">#@param<sp/>nfft<sp/>the<sp/>FFT<sp/>size.<sp/>Default<sp/>is<sp/>512.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">#@param<sp/>samplerate<sp/>the<sp/>samplerate<sp/>of<sp/>the<sp/>signal<sp/>we<sp/>are<sp/>working<sp/>with.<sp/>Affects<sp/>mel<sp/>spacing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">#@param<sp/>lowfreq<sp/>lowest<sp/>band<sp/>edge<sp/>of<sp/>mel<sp/>filters,<sp/>default<sp/>0<sp/>Hz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">#@param<sp/>highfreq<sp/>highest<sp/>band<sp/>edge<sp/>of<sp/>mel<sp/>filters,<sp/>default<sp/>samplerate/2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">#@return<sp/>A<sp/>numpy<sp/>array<sp/>of<sp/>size<sp/>nfilt<sp/>*<sp/>(nfft/2<sp/>+<sp/>1)<sp/>containing<sp/>filterbank.<sp/>Each<sp/>row<sp/>holds<sp/>1<sp/>filter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">get_filterbanks(nfilt=20,nfft=512,samplerate=16000,lowfreq=0,highfreq=None):</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>highfreq=<sp/>highfreq<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>samplerate/2</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>highfreq<sp/>&lt;=<sp/>samplerate/2,<sp/></highlight><highlight class="stringliteral">&quot;highfreq<sp/>is<sp/>greater<sp/>than<sp/>samplerate/2&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>compute<sp/>points<sp/>evenly<sp/>spaced<sp/>in<sp/>mels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>lowmel<sp/>=<sp/>hz2mel(lowfreq)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>highmel<sp/>=<sp/>hz2mel(highfreq)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>melpoints<sp/>=<sp/>numpy.linspace(lowmel,highmel,nfilt+2)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>our<sp/>points<sp/>are<sp/>in<sp/>Hz,<sp/>but<sp/>we<sp/>use<sp/>fft<sp/>bins,<sp/>so<sp/>we<sp/>have<sp/>to<sp/>convert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>from<sp/>Hz<sp/>to<sp/>fft<sp/>bin<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>bin<sp/>=<sp/>numpy.floor((nfft+1)*mel2hz(melpoints)/samplerate)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>fbank<sp/>=<sp/>numpy.zeros([nfilt,nfft/2+1])</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>xrange(0,nfilt):</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>xrange(int(bin[j]),int(bin[j+1])):</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fbank[j,i]<sp/>=<sp/>(i<sp/>-<sp/>bin[j])/(bin[j+1]-bin[j])</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>xrange(int(bin[j+1]),int(bin[j+2])):</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fbank[j,i]<sp/>=<sp/>(bin[j+2]-i)/(bin[j+2]-bin[j+1])</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fbank<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">##Apply<sp/>a<sp/>cepstral<sp/>lifter<sp/>the<sp/>the<sp/>matrix<sp/>of<sp/>cepstra.<sp/>This<sp/>has<sp/>the<sp/>effect<sp/>of<sp/>increasing<sp/>the<sp/>magnitude<sp/>of<sp/>the<sp/>high<sp/>frequency<sp/>DCT<sp/>coeffs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">#@param<sp/>cepstra<sp/>the<sp/>matrix<sp/>of<sp/>mel-cepstra,<sp/>will<sp/>be<sp/>numframes<sp/>*<sp/>numcep<sp/>in<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">#@param<sp/>L<sp/>the<sp/>liftering<sp/>coefficient<sp/>to<sp/>use.<sp/>Default<sp/>is<sp/>22.<sp/>L<sp/>&lt;=<sp/>0<sp/>disables<sp/>lifter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">#@return<sp/>the<sp/>lifted<sp/>cepstra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">lifter(cepstra,L=22):</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>L<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nframes,ncoeff<sp/>=<sp/>numpy.shape(cepstra)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>numpy.arange(ncoeff)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lift<sp/>=<sp/>1+<sp/>(L/2)*numpy.sin(numpy.pi*n/L)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lift*cepstra</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>values<sp/>of<sp/>L<sp/>&lt;=<sp/>0,<sp/>do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cepstra</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
    </programlisting>
    <location file="/users/spraak/vrenkens/code/tfkaldi/features/base.py"/>
  </compounddef>
</doxygen>
